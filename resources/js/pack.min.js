// JavaScript Document
"use strict";

// var fs = null;
// var URL = window.webkitURL || window.mozURL || window.URL;

// window.requestFileSystem = window.webkitRequestFileSystem || window.mozRequestFileSystem || window.msRequestFileSystem || window.requestFileSystem;
  
// function errorHandler(e) {
//     var msg = '';
//     switch (e.code) {
//         case FileError.QUOTA_EXCEEDED_ERR:  
//             msg = 'QUOTA_EXCEEDED_ERR';
//             break;
//         case FileError.NOT_FOUND_ERR:  
//             msg = 'NOT_FOUND_ERR';
//             break;
//         case FileError.SECURITY_ERR:  
//             msg = 'SECURITY_ERR';
//             break;
//         case FileError.INVALID_MODIFICATION_ERR:  
//             msg = 'INVALID_MODIFICATION_ERR';
//             break;
//         case FileError.INVALID_STATE_ERR:  
//             msg = 'INVALID_STATE_ERR';
//             break;
//         default:  
//             msg = 'Unknown Error';
//             break;
//     }   
//     console.log(msg);
// };

// function initFileSystem(filesystem) {
//     fs = filesystem;
// }

// if (window.requestFileSystem) {
//     window.requestFileSystem(window.TEMPORARY, 1024*1024, initFileSystem, errorHandler);
// }

// function onexport(blob) {
//     console.log("onexport");
//     var blobURL = URL.createObjectURL(blob);
//     console.log(blobURL);
//     var target = document.getElementById('export');
//     target.href = blobURL;
//     target.download = 'test.zip';
//     target.href = "";
//     target.download = "";
// }

// function onprogress() {
//     //
// }

// var pack = {
//     data : "",
//     setData : function(data) {
//         this.data = data;
//     },
//     writeData : function(fileEntry) {
//         var ext = fileEntry.name.split(".").pop().toLowerCase();
//         console.log(ext);
//         fileEntry.createWriter(function(fileWriter) {  

//             fileWriter.onwriteend = function(e) {  
//                 console.log('Write completed.');  
//             };  

//             fileWriter.onerror = function(e) {  
//               console.log('Write failed: ' + e.toString());  
//             };  

//             var blob;
//             var mineType = "application/octet-stream";
//             if (ext == 'html') {
//                 blob = new Blob([this.data], {type : "text/xml"});
//             } else if (ext == 'css') {
//                 blob = new Blob([this.data], {type : "text/css"});
//             } else if (ext == 'png') {
//                 blob = new Blob([this.data], {type:"image/png"});
//             } else {
//                 blob = new Blob([this.data], {type : "application/octet-stream"});
//             }

//             fileWriter.write(blob);

//         }, errorHandler);
//     },
//     getFile : function(file, data, dir) {
//         this.setData(data);
//         fs.root.getFile(file, {create: true}, this.writeData, errorHandler);
//     },

//     getDirectory : function(dirs) {
//         dirs.forEach(function (dir) {
//             fs.root.getDirectory(dir, {create: true}, null, errorHandler);
//         });
//     },

//     exportWizard : function (){

//     }
// };